{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\ITshow\\\\dearpal\\\\frontend\\\\src\\\\pages\\\\Letter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport '../styles/writeletter.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Letter() {\n  _s();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [letterContent, setContent] = useState(\"\");\n  const [letterColor, setColor] = useState(\"\"); //편지지 컬러\n  const [lineColor, setLine] = useState(\"\");\n  const [selectedColor, setSelectedColor] = useState(\"white\");\n  const [userId, setUserId] = useState(\"\");\n  const colorOptions = [{\n    id: \"blue\",\n    img: \"/img/circle_blue.png\",\n    selectedImg: \"/img/checkblue.png\"\n  }, {\n    id: \"pink\",\n    img: \"/img/circle_pink.png\",\n    selectedImg: \"/img/checkpink.png\"\n  }, {\n    id: \"yellow\",\n    img: \"/img/circle_yellow.png\",\n    selectedImg: \"/img/checkyellow.png\"\n  }, {\n    id: \"white\",\n    img: \"/img/circle_white.png\",\n    selectedImg: \"/img/checkwhite.png\"\n  }];\n  function changeColor(color) {\n    if (color === \"pink\") {\n      setColor(\"#FFCCE1\");\n      setLine(\"#F0A5AE\");\n      setSelectedColor(color);\n    } else if (color === \"yellow\") {\n      setColor(\"#F5EC8F\");\n      setLine(\"#E8D500\");\n      setSelectedColor(color);\n    } else if (color === \"white\") {\n      setColor(\"#ffffff\");\n      setLine(\"#ff0000\");\n      setSelectedColor(color);\n    } else {\n      setColor(\"#C8EAFC\");\n      setLine(\"#85CCFF\");\n      setSelectedColor(color);\n    }\n    function checkedButton() {}\n  }\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\"); // JWT 가져오기\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        setUserId(decoded.userId); // payload에서 userId 꺼내기\n      } catch (err) {\n        console.error(\"토큰 디코딩 실패:\", err);\n      }\n    }\n  }, []); //deps[] 처음 한 번만 실행\n\n  function addLetter() {\n    console.log(title, letterContent);\n    //편지 업로드 요청\n    fetch('/addLetter', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        letterContent,\n        selectedColor,\n        userId\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.message === \"편지 업로드 성공\") {\n        console.log(\"편지 업로드 성공\");\n        navigate(\"/About\");\n      } else {\n        console.log(data.message);\n      }\n    }).catch(err => {\n      console.error(err);\n      window.alert(\"서버 오류 발생\");\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter-paper\",\n        style: {\n          background: letterColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            background: letterColor\n          },\n          value: title,\n          placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          className: \"letter-title\",\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            background: lineColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          style: {\n            background: letterColor\n          },\n          value: letterContent,\n          placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uD3B8\\uC9C0\\uB97C \\uC791\\uC131\\uD558\\uC138\\uC694...\",\n          className: \"letter-content\",\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitBtn\",\n          onClick: addLetter,\n          children: \"\\uD3B8\\uC9C0 \\uBCF4\\uB0B4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DecoContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stickerBtn\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/sticker.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ImgBtn\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/image.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"musicBtn\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/music.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letterColor\",\n        children: colorOptions.map(color => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedColor === color.id ? color.selectedImg : color.img,\n          alt: color.id,\n          onClick: () => changeColor(color.id),\n          style: {\n            cursor: \"pointer\",\n            width: \"50px\"\n          }\n        }, color.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Letter, \"jSO6v5risn+Xq+metxch1V+Yeak=\", false, function () {\n  return [useNavigate];\n});\n_c = Letter;\nexport default Letter;\nvar _c;\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jwtDecode","jsxDEV","_jsxDEV","Letter","_s","navigate","title","setTitle","letterContent","setContent","letterColor","setColor","lineColor","setLine","selectedColor","setSelectedColor","userId","setUserId","colorOptions","id","img","selectedImg","changeColor","color","checkedButton","token","localStorage","getItem","decoded","err","console","error","addLetter","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","catch","window","alert","children","className","style","background","value","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","map","alt","cursor","width","_c","$RefreshReg$"],"sources":["C:/Project/ITshow/dearpal/frontend/src/pages/Letter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport '../styles/writeletter.css'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\nfunction Letter() {\r\n    const navigate = useNavigate();\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [letterContent, setContent] = useState(\"\");\r\n    const [letterColor, setColor] = useState(\"\"); //편지지 컬러\r\n    const [lineColor, setLine] = useState(\"\");\r\n    const [selectedColor, setSelectedColor] = useState(\"white\");\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n\r\n    const colorOptions = [\r\n        { id: \"blue\", img: \"/img/circle_blue.png\", selectedImg: \"/img/checkblue.png\" },\r\n        { id: \"pink\", img: \"/img/circle_pink.png\", selectedImg: \"/img/checkpink.png\" },\r\n        { id: \"yellow\", img: \"/img/circle_yellow.png\", selectedImg: \"/img/checkyellow.png\" },\r\n        { id: \"white\", img: \"/img/circle_white.png\", selectedImg: \"/img/checkwhite.png\" },\r\n    ];\r\n\r\n    function changeColor(color) {\r\n\r\n        if (color === \"pink\") {\r\n            setColor(\"#FFCCE1\");\r\n            setLine(\"#F0A5AE\")\r\n            setSelectedColor(color)\r\n        } else if (color === \"yellow\") {\r\n            setColor(\"#F5EC8F\");\r\n            setLine(\"#E8D500\")\r\n            setSelectedColor(color)\r\n        } else if (color === \"white\") {\r\n            setColor(\"#ffffff\");\r\n            setLine(\"#ff0000\")\r\n            setSelectedColor(color)\r\n        } else {\r\n            setColor(\"#C8EAFC\");\r\n            setLine(\"#85CCFF\")\r\n            setSelectedColor(color)\r\n        }\r\n\r\n        function checkedButton() { }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");  // JWT 가져오기\r\n        if (token) {\r\n            try {\r\n                const decoded = jwtDecode(token);\r\n                setUserId(decoded.userId);  // payload에서 userId 꺼내기\r\n            \r\n            } catch (err) {\r\n                console.error(\"토큰 디코딩 실패:\", err);\r\n            }\r\n        }\r\n    }, []); //deps[] 처음 한 번만 실행\r\n\r\n\r\n   function addLetter(){\r\n      \r\n        console.log(title, letterContent)\r\n        //편지 업로드 요청\r\n            fetch('/addLetter', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ title, letterContent, selectedColor, userId })\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data.message === \"편지 업로드 성공\"){\r\n                        console.log(\"편지 업로드 성공\");\r\n                        navigate(\"/About\");\r\n                    } else {\r\n                        console.log(data.message);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                    window.alert(\"서버 오류 발생\");\r\n                });\r\n                \r\n    }\r\n    \r\n\r\n    return (\r\n        <div >\r\n            <div className=\"letter-container\">\r\n                <div className=\"letter-paper\" style={{ background: letterColor }}>\r\n                    <input style={{ background: letterColor }}\r\n                        value={title}\r\n                        placeholder=\"제목을 입력하세요\"\r\n                        className=\"letter-title\"\r\n                        onChange={(e) => setTitle(e.target.value)} />\r\n                    <hr style={{ background: lineColor }} />\r\n\r\n                    <textarea\r\n                        style={{ background: letterColor }}\r\n                        value={letterContent}\r\n                        placeholder=\"여기에 편지를 작성하세요...\"\r\n                        className=\"letter-content\"\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                    />\r\n\r\n                    <button className=\"submitBtn\" onClick={addLetter}>\r\n                        편지 보내기\r\n                    </button>\r\n\r\n                </div>\r\n                <div className=\"DecoContainer\">\r\n                    <button className=\"stickerBtn\"> <img src=\"/img/sticker.png\" /></button>\r\n                    <button className=\"ImgBtn\"> <img src=\"/img/image.png\" /></button>\r\n                    <button className=\"musicBtn\"> <img src=\"/img/music.png\" /></button>\r\n                </div>\r\n\r\n                <div className=\"letterColor\">\r\n                    {colorOptions.map((color) => (\r\n                        <img\r\n                            key={color.id}\r\n                            src={selectedColor === color.id ? color.selectedImg : color.img}\r\n                            alt={color.id}\r\n                            onClick={() => changeColor(color.id)}\r\n                            style={{ cursor: \"pointer\", width: \"50px\" }}\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Letter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}